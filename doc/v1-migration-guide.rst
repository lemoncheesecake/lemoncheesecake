.. _`v1 migration guide`:

V1 migration guide
==================

This page lists all the non-compatible changes between 0.22.x and 1.x versions of lemoncheesecake and how
to migrate.

API
---

Project
^^^^^^^

The ``project.py`` entry point of lemoncheesecake projects has been greatly simplified in version 1.x.

The ``project.py`` as it was generated by ``lcc bootstrap`` looked like this in version 0.22.x::

    import os.path

    from lemoncheesecake.project import SimpleProjectConfiguration


    project_dir = os.path.dirname(__file__)
    project = SimpleProjectConfiguration(
        suites_dir=os.path.join(project_dir, "suites"),
        fixtures_dir=os.path.join(project_dir, "fixtures"),
    )

Here is how it looks in version 1.x::

    import os.path

    from lemoncheesecake.project import Project


    project_dir = os.path.dirname(__file__)
    project = Project(project_dir)

Here is what have been changed:

- to add custom CLI arguments to ``lcc run``:

  - there is no more ``HasCustomCliArgs`` extra mixin class to extend, simply extend ``Project``

  - the ``add_custom_cli_args`` method has been renamed into ``add_cli_args``

- the ``get_suites`` method has been renamed into ``load_suites``

- the ``get_fixtures`` method has been renamed into ``load_fixtures``

- the ``get_report_title`` method has been renamed into ``build_report_title``

- the ``get_report_info`` method has been renamed into ``build_report_info``

- to run code before and/or after test session: the ``pre_run`` and ``post_run`` methods remain while
  there are no longer extra ``HasPreRunHook`` and ``HasPostRunHook`` extra mixin classes to extend

- the overridable ``get_metadata_policy`` has been turned into a ``metadata_policy`` that it is set to a
  vanilla ``MetadataPolicy`` instance and that can be changed at will; there is no longer a ``HasMetadataPolicy``
  mixin class to extend

Also see :ref:`Project customization <project>` for more information.


Matchers
^^^^^^^^

The following functions have been removed:

- ``this_dict``

- ``check_that_entry``

- ``require_that_entry``

- ``assert_that_entry``

The corresponding ``check_that_in``, ``require_that_in`` and ``assert_that_in`` functions must be used instead.

In ``Matcher`` class:

- the ``description`` method has been renamed into ``build_description``

- the ``short_description`` method has been renamed into ``build_short_description``

The ``lemoncheesecake.api`` module no longer exports the matching API, use ``from lemoncheesecake.matching import *`` as
it was/is documented.


Fixtures
^^^^^^^^

The fixture scope ``session_prerun`` has been renamed into ``pre_run``.

The ``lemoncheesecake.fixtures`` module has been renamed into ``lemoncheesecake.fixture``.


Attachment logs
^^^^^^^^^^^^^^^

The ``binary_mode`` argument of the ``save_attachment_content`` function has been removed. The file opening mode
is now automatically determined upon the type of data passed as argument.


Misc
^^^^

The ``add_test_in_suite`` and ``add_tests_in_suite`` functions have been removed.
Use ``add_test_into_suite`` instead.

The ``lemoncheesecake.validators`` module, that holds the ``MetadataPolicy`` class, has been renamed into
``lemoncheesecake.metadatapolicy``.

Reporting
---------

The HTML report now use static resources (also named "fat") by default, meaning the report can be be read offline
for instance. In other words: the ``offline_mode`` attribute of the class ``lemoncheesecake.reporting.backends.HtmlBackend``
has been renamed into ``fat_html`` and is now set to ``True`` by default.


CLI
---

The ``--enable-reporting`` and ``--disable-reporting`` arguments have been removed from ``lcc run``.
Use the ``--reporting`` absolute reporting backend list instead.
